(()=>{"use strict";function e(e){return Array.isArray(e)||ArrayBuffer.isView(e)}function n(e){(function(e){return null!=e&&"function"==typeof e.Dispose})(e)&&e.Dispose()}function t(e,n){var t,r;return(null===(t=Object.getPrototypeOf(e))||void 0===t?void 0:t.constructor)===(null===(r=Object.getPrototypeOf(n))||void 0===r?void 0:r.constructor)}class r{constructor(e){this.iter=e}"System.Collections.Generic.IEnumerator`1.get_Current"(){return this.current}"System.Collections.IEnumerator.get_Current"(){return this.current}"System.Collections.IEnumerator.MoveNext"(){const e=this.iter.next();return this.current=e.value,!e.done}"System.Collections.IEnumerator.Reset"(){throw new Error("JS iterators cannot be reset")}Dispose(){}}function i(e){return"function"==typeof e.GetEnumerator?e.GetEnumerator():new r(e[Symbol.iterator]())}function a(e){return{[Symbol.iterator](){return this},next(){const n=e["System.Collections.IEnumerator.MoveNext"]();return{done:!n,value:n?e["System.Collections.IEnumerator.get_Current"]():void 0}}}}function o(e,n){let t=e.toString(10);for(;t.length<n;)t="0"+t;return t}function l(e){const n=e;return"number"==typeof n.offset?n.offset:1===e.kind?0:-6e4*e.getTimezoneOffset()}class s{static id(e){return s.idMap.has(e)||s.idMap.set(e,++s.count),s.idMap.get(e)}}function u(e){let n=0,t=5381;const r=e.length;for(;n<r;)t=33*t^e.charCodeAt(n++);return t}function c(e){return 2654435761*e|0}function h(e){return 0===e.length?0:e.reduce(((e,n)=>(e<<5)+e^n))}function d(n){var t;if(null==n)return 0;switch(typeof n){case"boolean":return n?1:0;case"number":return c(n);case"string":return u(n);default:return function(e){return"function"==typeof e.GetHashCode}(n)?n.GetHashCode():e(n)?function(e){const n=e.length,t=new Array(n);for(let r=0;r<n;r++)t[r]=d(e[r]);return h(t)}(n):n instanceof Date?function(e){return e.getTime()}(n):(null===(t=Object.getPrototypeOf(n))||void 0===t?void 0:t.constructor)===Object?h(Object.values(n).map((e=>d(e)))):c(s.id(n))}}function m(n,t){var r;return n===t||(null==n?null==t:null!=t&&"object"==typeof n&&(function(e){return"function"==typeof e.Equals}(n)?n.Equals(t):e(n)?e(t)&&function(e,n){return function(e,n,t){if(null==e)return null==n;if(null==n)return!1;if(e.length!==n.length)return!1;for(let r=0;r<e.length;r++)if(!t(e[r],n[r]))return!1;return!0}(e,n,m)}(n,t):n instanceof Date?t instanceof Date&&0===f(n,t):(null===(r=Object.getPrototypeOf(n))||void 0===r?void 0:r.constructor)===Object&&function(e,n){const t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;t.sort(),r.sort();for(let i=0;i<t.length;i++)if(t[i]!==r[i]||!m(e[t[i]],n[r[i]]))return!1;return!0}(n,t)))}function f(e,n){let t,r;return"offset"in e&&"offset"in n?(t=e.getTime(),r=n.getTime()):(t=e.getTime()+l(e),r=n.getTime()+l(n)),t===r?0:t<r?-1:1}function g(n,t){var r;return n===t?0:null==n?null==t?0:-1:null==t?1:"object"!=typeof n?n<t?-1:1:function(e){return"function"==typeof e.CompareTo}(n)?n.CompareTo(t):e(n)?e(t)?function(e,n){return function(e,n,t){if(null==e)return null==n?0:1;if(null==n)return-1;if(e.length!==n.length)return e.length<n.length?-1:1;for(let r=0,i=0;r<e.length;r++)if(i=t(e[r],n[r]),0!==i)return i;return 0}(e,n,g)}(n,t):-1:n instanceof Date?t instanceof Date?f(n,t):-1:(null===(r=Object.getPrototypeOf(n))||void 0===r?void 0:r.constructor)===Object?function(e,n){const t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return t.length<r.length?-1:1;t.sort(),r.sort();for(let i=0,a=0;i<t.length;i++){const o=t[i];if(o!==r[i])return o<r[i]?-1:1;if(a=g(e[o],n[o]),0!==a)return a}return 0}(n,t):-1}function y(e){const n=e<0,t=(e=Math.abs(e))%36e5/6e4;return(n?"-":"+")+o(~~(e/36e5),2)+":"+o(t,2)}function E(e,n){const t=e.toISOString();return"first"===n?t.substring(0,t.indexOf("T")):t.substring(t.indexOf("T")+1,t.length-1)}function M(e,n,t){return n.replace(/(\w)\1*/g,(n=>{let r=Number.NaN;switch(n.substring(0,1)){case"y":const i=t?e.getUTCFullYear():e.getFullYear();r=n.length<4?i%100:i;break;case"M":r=(t?e.getUTCMonth():e.getMonth())+1;break;case"d":r=t?e.getUTCDate():e.getDate();break;case"H":r=t?e.getUTCHours():e.getHours();break;case"h":const a=t?e.getUTCHours():e.getHours();r=a>12?a%12:a;break;case"m":r=t?e.getUTCMinutes():e.getMinutes();break;case"s":r=t?e.getUTCSeconds():e.getSeconds();break;case"f":r=t?e.getUTCMilliseconds():e.getMilliseconds()}return Number.isNaN(r)?n:r<10&&n.length>1?"0"+r:""+r}))}s.idMap=new WeakMap,s.count=0,Symbol("curried");const S=Symbol("numeric");function A(e,n){return"number"==typeof e?e.toPrecision(n):e[S]().toPrecision(n)}function k(e,n){return"number"==typeof e?e.toExponential(n):e[S]().toExponential(n)}function C(e){return"number"==typeof e?(Number(e)>>>0).toString(16):e[S]().toHex()}function b(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}function v(e,n=0){var t,r;if(null!=e&&"object"==typeof e){if("function"==typeof e.toString)return e.toString();if(Symbol.iterator in e)return function(e){let n=0,t="[";for(const r of e){if(0===n)t+=v(r);else{if(100===n){t+="; ...";break}t+="; "+v(r)}n++}return t+"]"}(e);{const i=null===(t=Object.getPrototypeOf(e))||void 0===t?void 0:t.constructor;return i===Object&&n<10?"{ "+Object.entries(e).map((([e,t])=>e+" = "+v(t,n+1))).join("\n  ")+" }":null!==(r=null==i?void 0:i.name)&&void 0!==r?r:""}}return String(e)}class p{toJSON(){return function(e){const n={},t=Object.keys(e);for(let r=0;r<t.length;r++)n[t[r]]=e[t[r]];return n}(this)}toString(){return e=this,"{ "+Object.entries(e).map((([e,n])=>e+" = "+v(n))).join("\n  ")+" }";var e}GetHashCode(){return e=this,h(Object.values(e).map((e=>d(e))));var e}Equals(e){return function(e,n){if(e===n)return!0;if(t(e,n)){const t=Object.keys(e);for(let r=0;r<t.length;r++)if(!m(e[t[r]],n[t[r]]))return!1;return!0}return!1}(this,e)}CompareTo(e){return function(e,n){if(e===n)return 0;if(t(e,n)){const t=Object.keys(e);for(let r=0;r<t.length;r++){const i=g(e[t[r]],n[t[r]]);if(0!==i)return i}return 0}return-1}(this,e)}}class T{constructor(e,n){"function"==typeof n?(this.getter=e,this.setter=n):(this.getter=()=>e,this.setter=n=>{e=n})}get contents(){return this.getter()}set contents(e){this.setter(e)}}class L{constructor(e){this.message=e}}function J(e){return(n=e)instanceof L||n instanceof Error?e:new Error(String(e));var n}const H=/(^|[^%])%([0+\- ]*)(\*|\d+)?(?:\.(\d+))?(\w)/g;function B(e){return{input:e,cont:(n=e,e=>{H.lastIndex=0;const t=[],r=[];let i=0,a=H.exec(n);for(;a;){const e=a.index+(a[1]||"").length;t.push(n.substring(i,e).replace(/%%/g,"%")),r.push(a),i=H.lastIndex,H.lastIndex-=1,a=H.exec(n)}return 0===t.length?e(n.replace(/%%/g,"%")):(t.push(n.substring(i).replace(/%%/g,"%")),G(e,t,r))})};var n}function K(e,n){return"string"==typeof n?e(n):n.cont(e)}function j(e,n,t,r,i){let a="";if(n=n||"",i=i||"","number"==typeof(l=e)||(null==l?void 0:l[S]))switch("x"!==i.toLowerCase()&&(function(e,n){return function(e,n){return"number"==typeof e?e<n?-1:e>n?1:0:e.CompareTo(n)}(e,n)<0}(e,0)?(e=function(e,n){return"number"==typeof e?-1*e:e[S]().multiply(-1)}(e),a="-"):n.indexOf(" ")>=0?a=" ":n.indexOf("+")>=0&&(a="+")),r=null==r?null:parseInt(r,10),i){case"f":case"F":e=function(e,n){return"number"==typeof e?e.toFixed(n):e[S]().toFixed(n)}(e,r=null!=r?r:6);break;case"g":case"G":e=null!=r?A(e,r):A(e);break;case"e":case"E":e=null!=r?k(e,r):k(e);break;case"x":e=C(e);break;case"X":e=C(e).toUpperCase();break;default:e=String(e)}else e=e instanceof Date?function(e,n,t){return null!=e.offset?function(e,n){var t,r,i;const a=new Date(e.getTime()+(null!==(t=e.offset)&&void 0!==t?t:0));if("string"!=typeof n)return a.toISOString().replace(/\.\d+/,"").replace(/[A-Z]|\.\d+/g," ")+y(null!==(r=e.offset)&&void 0!==r?r:0);if(1!==n.length)return M(a,n,!0);switch(n){case"D":case"d":return E(a,"first");case"T":case"t":return E(a,"second");case"O":case"o":return function(e,n){const t=e.toISOString();return t.substring(0,t.length-1)+y(n)}(a,null!==(i=e.offset)&&void 0!==i?i:0);default:throw new Error("Unrecognized Date print format")}}(e,n):function(e,n){const t=1===e.kind;if("string"!=typeof n)return t?e.toUTCString():e.toLocaleString();if(1!==n.length)return M(e,n,t);switch(n){case"D":case"d":return t?E(e,"first"):e.toLocaleDateString();case"T":case"t":return t?E(e,"second"):e.toLocaleTimeString();case"O":case"o":return function(e,n){if(n)return e.toISOString();{const n=null==e.kind||2===e.kind;return o(e.getFullYear(),4)+"-"+o(e.getMonth()+1,2)+"-"+o(e.getDate(),2)+"T"+o(e.getHours(),2)+":"+o(e.getMinutes(),2)+":"+o(e.getSeconds(),2)+"."+o(e.getMilliseconds(),3)+(n?y(-6e4*e.getTimezoneOffset()):"")}}(e,t);default:throw new Error("Unrecognized Date print format")}}(e,n)}(e):v(e);var l;if(t="number"==typeof t?t:parseInt(t,10),isNaN(t))e=a+e;else{const r=n.indexOf("0")>=0,i=n.indexOf("-")>=0,o=i||!r?" ":"0";e="0"===o?a+(e=N(e,t-a.length,o,i)):N(a+e,t,o,i)}return e}function G(e,n,t,r="",i=-1){return(...a)=>{let o=r;const l=n.slice(),s=t.slice();for(const e of a){const[,,n,t,r,a]=s[0];let u=t;if(i>=0)u=i,i=-1;else if("*"===u){if(e<0)throw new Error("Non-negative number required");i=e;continue}o+=l[0],o+=j(e,n,u,r,a),l.splice(0,1),s.splice(0,1)}return 0===s.length?(o+=l[0],e(o)):G(e,l,s,o,i)}}function I(e,n){return Array.isArray(n)?n.join(e):Array.from(n).join(e)}function N(e,n,t,r){t=t||" ",n-=e.length;for(let i=0;i<n;i++)e=r?e+t:t+e;return e}const R=["Peter","Christian","Erik","Jens","Hans","Niels","Jørgen","Kristian","Henrik","Poul","Svend","Søren","Aage","Michael","Lars","Ole","Martin","Anders","Thomas","Johannes","Knud","Jan","Emil","John","Bent","Karl","Carl","Henning","Per","Frederik","Rasmus","Morten","Andreas","Jesper","Arne","Kim","Børge","Peder","Flemming","Kaj","Mads","Leif","Torben","Kurt","Mogens","Steen","Jacob","Henry","Ove","Bjarne","Finn","Claus","Preben","Bo","Otto","Mikkel","Allan","Carsten","Jakob","Marius","Johan","Brian","Egon","Holger","Alfred","Mathias","Viggo","Daniel","Jonas","Simon","Valdemar","Aksel","Gunnar","Kasper","Verner","Vilhelm","Frank","Georg","Helge","Kenneth","Erling","Villy","Magnus","Jørn","Lasse","Ib","Anton","Axel","Laurits","Robert","Alexander","Tage","Harry","Vagn","Harald","Ejner","Kjeld","Ernst","Ejnar","Dennis","Benny","Marinus","Tommy","Bjørn","René","Nikolaj","Anker","Karsten","Tobias","Palle","Gert","Johnny","Klaus","Casper","Nicolai","Oliver","Sebastian","Frede","Leo","Rene","Jeppe","Thorvald","Albert","Julius","Gustav","Richard","William","David","Benjamin","Mikael","Dan","August","Steffen","Stig","Edvard","Oluf","Ulrik","Patrick","Tom","Kai","Orla","Evald","Victor","Ejvind","Alex","Ivan","Willy","Paul","Mark","Rune","Keld","Theodor","Kristen","Ludvig","Asger","Christoffer","Christen","Ali","Oskar","Thorkild","Charles","Heinrich","Max","Eigil","Stefan","Herman","Bernhard","Sigurd","Nicklas","Birger","Viktor","Frode","Louis","Emanuel","Lykke","Bruno","Philip","Ingemann","Marcus","Carlo","Olaf","Troels","Gunner","Sven","Kristoffer","Kent","Arnold","Sofus","Mohammad","Nicolaj","Adolf","Ebbe","Herluf","Tonny","Hugo","Freddy","Rudolf","Arthur","Mike","Oscar","Werner","Lucas","Uffe","Jes","Jimmy","Frits","Jonathan","Sten","Laurids","Mohamed","Helmer","Esben","Villiam","Einar","Adam","Thor","Hartvig","Wilhelm","Asbjørn","Helmuth","Sigfred","Jon","Sune","Juel","Bendt","Hermann","Ahmad","Richardt","Elias","Gerhard","Povl","Bjarke","Joachim","Martinus","Ingvard","Lukas","Tim","Hjalmar","Walther","Erland","Lauritz","Ejgil","Ejler","Kevin","Marc","Leon","Nils","Ahmed","Ferdinand","Markus","Niklas","Edmund","Folmer","Christopher","Osvald","Fritz","Kresten","Nick","Åge","Hardy","Jack","Ingolf","Malthe","Lennart","Eli","Lynge","Olav","Severin","Alf","Chris","Jimmi","Vagner","Josef","Hassan","Karlo","Rolf","Nikolai","Ulrich","Boye","Chr","Gregers","Roland","Iver","Ibrahim","Edvin","Peer","Heine","Ditlev","Theis","Sander","Nis","Valentin","Sigvald","Danny","Mohamad","Jannik","André","Birk","Ronni","Samuel","Ivar","Lau","James","Janus","Normann","Thorbjørn","Jim","Mohammed","Gorm","Noah","Friedrich","Mustafa","Jul","Konrad","Joakim","Erhardt","Malte","Unavngivet","Isak","Reinholdt","Eskild","Phillip","Gerner","Bertel","Paw","Just","Andre","Gudmund","Einer","Teddy","Niclas","Walter","Arvid","Chresten","Lauge","Gotfred","Silas","Vang","Rikard","Ken","Anthon","Bendix","Kenn","Mehmet","Jean","Agner","Jess","Marco","Torsten","Bøje","Glenn","Hussein","Filip","Laust","Herbert","Elmer","Mahmoud","Gabriel","Ruben","Rud","Hakon","Kaare","Danni","Tony","Gerhardt","Nicholas","Abdul","Wagner","Erhard","Jannick","Joseph","Eduard","Immanuel","Ronnie","Omar","Nicolas","Elo","Steven","Sonny","Tonni","Tue","Bernhardt","Sejer","Ulf","Bernt","Regnar","Henri","Johann","Poul-Erik","Bertram","Stephan","Asmus","Sophus","Frands","Ronald","Robin","Kay","Ingvar","Reinhold","Villads","Aske","Eric","Godtfred","Kenny","Kåre","Felix","Matias","Thyge","Pavia","Nichlas","Hendrik","Vincent","Torkild","Nicki","Norman","Bastian","Alan","Aleksander","Frans","Claes","Tomas","Aron","Michel","Kennet","Malik","Cornelius","Conrad","Franz","Frants","Sylvester","Van","Toke","Skjold","Elgaard","Ian","Steffan","Lindhardt","Pauli","Abel","Osman","Curt","Abdi","Andrew","Hasan","Evan","Hilmar","Johnni","Volmer","Halfdan","Edward","Julian","Adrian","Valther","George","Matthias","Sejr","Anthony","Pierre","Hans-Henrik","Geert","Mandrup","Heinz","Bengt","Hilmer","Thue","Stephen","Boe","Said","Frantz","Lindy","Jarl","Rudi","Reinhardt","Edgar","Eivind","Pelle","Egil","Enok","Find","Ismail","Lorenz","Regner","Hannibal","Arno","Ahmet","Kenni","Manfred","Boje","Eyvind","Hjalte","Halvor","Gottlieb","Thorkil","Bertil","Ronny","Khaled","Nordahl","Ralf","Eggert","Trier","Boris","Heino","Sigvard","Abraham","Ejlif","Leonhard","Haakon","Hasse","Gordon","Jonny","Ben","Angelo","Ryan","Hagen","Yusuf","Denis","Ewald","Valter","Antonius","Ejgild","Jonatan","Tore","Svenning","Mick","Bøge","Leander","Elvin","Ankjær","Roger","Thøger","Reinholt","Antonio","Adnan","Günther","Abdullah","Reimer","Sami","Arly","Ingeman","Raymond","Salomon","Svend-Erik","Samir","Waldemar","Andy","Vilfred","Ricard","Erich","Roar","Roald","Enevold","Amir","Klavs","Pele","Lejf","Muhammad","Dines","Stanley","Charlie","Jürgen","Dion","Folke","Bill","Kell","Hans-Jørgen","Uwe","Abbas","Freddie","Arild","Wolfgang","Gerth","Engelhardt","Sean","Rudolph","Adler","Eugen","Bilal","Albrecht","Villum","Eiler","Jamal","Willi","Marcel","Harding","Rene'","Joel","Haagen","Muhammed","Albin","Helmut","Karim","Augustinus","Jeff","Lorentz","Marthinus","Clement","Lee","Eilif","Hilbert","Harly","Fredrik","Visti","Thorsten","Michal","Youssef","Frithjof","Bue","Hamid","Thormod","Strange","Eske","Tor","Leopold","Melchior","Rico","Abdullahi","Kaspar","Paulus","Herløv","Caspar","Fjord","Benno","Jose","Kuno","Luis","Francis","Nicky","Roy","Josva","Urban","Berthel","Reinhard","Hussain","Levin","Kingo","Ansgar","Franck","Saleh","Scott","Adolph","Murat","Khalid","Kris","Mickey","Nuka","Eddie","Laurs","Deniz","Kian","Kirstein","Elith","Leonhardt","Milton","Abdel","Leonard","Thanh","Reza","Hagbard","Engel","Kalle","Ricky","Khalil","Emilius","Ask","Frithiof","Svend-Aage","Ahlmann","Manuel","Erwin","Magne","Jackie","Ervin","Mattias","Hemming","Niels-Erik","Charly","Adel","Petrus","Ancher","Antoni","Kornelius","Willemoes","Carlos","Dieter","Bror","Alvin","Ralph","Yasin","Vittus","Senius","Jacques","De","Ege","Eigild","Wagn","Tino","Hamza","Ragnar","Miki","Frimann","Horst","Heide","Hother","Jann","Torkil","Amdi","Ingo","Knud-Erik","Hüseyin","Elof","Emre","Hans-Erik","Mario","Teis","Amin","Ramazan","Thorleif","Kr","Aziz","Johny","Gilbert","Frimodt","Øjvind","Joe","Vitus","Hans-Christian","Olof","Torbjørn","Moses","Edwin","Jason","Minh","Juan","Maria","Lorens","Fin","Walid","Toni","Berner","Guldborg","Donald","Hubert","Tyge","Patrik","Hilding","Willum","Boas","Franklin","Fini","Mik","Mourits","Terkel","Bernth","Milan","Dean","Jens-Erik","Tønnes","Gustaf","Gøsta","Niels-Jørgen","Jensenius","Amos","Ricki","Dannie","Rudy","Jokum","Gudmand","Levi","Ludwig","Miguel","Glen","Nathan","Stanislaw","Sivert","Rex","Ejvin","Abdirahman","Elis","Arnt","Kjell","Emmanuel","Arent","Holten","Broder","Leslie","Abdallah","Gunni","Kamal","Halil","Fornavn","Mahamed","Sam","Rikardt","Uno","Gedion","Arndt","Omer","Boy","Benni","Tommi","Harris","Nicholai","Joshua","Tormod","Salim","Tittus","Salah","Timm","Svenn","Anas","Amandus","Jasper","Kemal","Luca","Imanuel","Johnnie","Espen","Gynther","Christer","Frej","Cilius","Zacharias","Hakan","Micki","Roman","Wilfred","Haci","Bernard","Mathæus","Sakarias","Herold","Stein","Can","Dusinus","Seth","Armand","Adem","Linus","Bøgild","Douglas","Elmar","Rafael","Therkel","Nabil","Matthew","Asker","Nico","Niels-Henrik","Buster","Detlef","Eskil","Nikki","Knut","Nasser","Constantin","Loui","Bonne","Konstantin","El","Renè","Bernd","Lennert","Meinert","Hadi","Johs","Frederick","Marquard","Siegfried","Selmer","Zakarias","Marck","Joen","Sven-Erik","Tristan","Jimmie","Jerry","Claudius","Yousef","Fatih","Hagbart","Vibe","Piotr","Jens-Christian","Artur","Lambert","Thorning","Mahdi","Siegfred","Bøggild","Mustapha","Dirch","Therkild","Günter","Sverre","Noel","Enrico","Kjartan","Ismet","Fabian","Majid","Moritz","Reno","Esper","Imad","Aslak","Justus","Seier","Andrzej","Matti","Kristjan","Steve","Ngoc","Syed","Bob","Billy","Jama","Fredy","Kenan","Enes","Esbern","Lorents","Ömer","Mikail","Mohamud","Christoph","Hans-Peter","Hoang","Bjørk","Nikolas","Dusinius","Cai","Musa","Saad","Farah","Ejby","Kjærulf","Nordal","Sonni","Niki","Asser","Skat","Quoc","Algot","Francois","Salih","Rahman","Dann","Juul","Ebert","Olfert","Piet","Yngve","Bjerne","Jozef","Wolf","Løkke","Efraim","Lindhard","Ejlert","Alberto","Nickolai","Howard","Thorben","Timothy","Marek","Villi","Ville","Theo","Jens-Peter","Laue","Gravers","Marko","Mehdi","Arnfred","Dirk","Ingvardt","Hung","Kadir","Rashid","Benedikt","Petri"],w=["Marie","Anna","Margrethe","Karen","Kirstine","Kirsten","Johanne","Elisabeth","Else","Anne","Inger","Mette","Louise","Maria","Ellen","Kristine","Hanne","Sofie","Inge","Susanne","Helle","Grethe","Marianne","Lene","Gerda","Birthe","Charlotte","Bente","Birgit","Tove","Edith","Ruth","Kathrine","Pia","Lone","Christine","Camilla","Emilie","Jytte","Jette","Birgitte","Helene","Bodil","Julie","Lis","Katrine","Lise","Ulla","Gitte","Ingeborg","Eva","Tina","Gudrun","Irene","Cecilie","Ane","Christina","Vibeke","Ingrid","Annette","Ida","Rikke","Emma","Laura","Karin","Agnes","Erna","Mary","Pernille","Mathilde","Anette","Aase","Dorthe","Lisbeth","Astrid","Helga","Esther","Heidi","Signe","Line","Inga","Amalie","Jensine","Henriette","Dorthea","Elise","Merete","Alice","Ella","Sonja","Rigmor","Hansine","Karoline","Maren","Lilly","Margit","Elly","Jenny","Martha","Dorte","Valborg","Olga","Caroline","Karina","Frederikke","Trine","Anni","Rita","Lykke","Jane","Malene","Maja","Elna","Sara","Nanna","Agnete","Linda","Andrea","Stine","Dagmar","Dagny","Nina","Asta","Nielsine","Sigrid","Mona","Cathrine","Anja","Solveig","Jonna","Lillian","Anita","Grete","Ebba","Lotte","Ester","Mia","Rosa","Viola","Jeanette","Henny","Annelise","Britta","Petra","Sarah","Gurli","Birte","Vera","Ann","Sophie","Vilhelmine","Tine","Agnethe","Laila","Michelle","Connie","Ketty","Karla","Joan","Augusta","Alma","Petrea","Betty","Oda","Kristina","Edel","Ragnhild","Ditte","Bettina","Magdalene","Annie","Clara","Lisa","Eleonora","Doris","Lilian","Simone","Mie","Lena","Elin","Olivia","Magda","Berit","Carla","Thora","Josefine","Frida","Yvonne","Tanja","Vivi","Mariane","Kamilla","Emmy","Betina","Gunhild","Elsebeth","Sanne","Margrete","Anny","Elvira","Randi","Lydia","Klara","Minna","Susan","Amanda","Martine","Rasmine","Lea","Janne","Oline","Lærke","Hedvig","Carina","Jannie","Sørine","Lilli","Freja","Kristiane","Conny","Nicoline","Bertha","Meta","Christiane","Victoria","Kamma","Gertrud","Harriet","Ingelise","Elisa","Britt","Kate","Nikoline","Lissi","Petrine","Sandra","Herdis","Helena","Irma","Liselotte","Isabella","Jørgine","Janni","Katja","Diana","Josephine","Helen","Iben","Juliane","Hilda","Winnie","Marlene","Anne-Marie","Vita","Poula","Dora","Ninna","Therese","Nadia","Thi","Majbritt","Eline","Krista","Anine","Maiken","Thea","Anne-Mette","Kaja","Iris","Thyra","Metha","Solvejg","Pouline","Ina","Sofia","Laurine","Ellinor","Mai","Liv","Christa","Annalise","Elsa","Lizzie","Ilse","Alfrida","Rebecca","Lisbet","Mille","Hanna","Theodora","Nancy","Benedikte","Alberte","Annika","Yrsa","Rose","Vivian","Alexandra","Sabrina","Inge-Lise","Anne-Lise","Sine","Paula","Bolette","Sidsel","Viktoria","Alvilda","Maj-Britt","Ragna","Lissy","Monica","Selma","Johanna","Elinor","Merethe","Maj","Rebekka","Pauline","Bitten","Agathe","Conni","Stephanie","Matilde","Jeanne","Dorrit","Evelyn","Stella","Annemette","Hertha","Dina","Judith","Jakobine","Naja","Luise","Lise-Lotte","Natasja","Nora","Majken","Elfrida","Sabine","Cecilia","Julia","Erika","Barbara","Elisabet","Lizzi","Annemarie","Hansigne","Elizabeth","Nelly","Sylvia","Majbrit","Kjestine","Nathalie","Christel","Fie","Karna","Eli","Mariann","Gry","Nadja","Fanny","Marie-Louise","Kathe","Patricia","Ena","Tenna","Katharina","Maibritt","Dorothea","Jasmin","Natascha","Hannah","Sussi","Margot","Marian","Catharina","Norma","Wilhelmine","Sophia","Jutta","Nicole","Bothilde","Magna","Rie","Sille","Regitze","Benedicte","Larsine","Hjørdis","Lynge","Melanie","Zenia","Jeannette","Brita","Benthe","E","Elva","Stina","Jacobine","Birtha","Evy","Monika","Boline","Regine","Kira","Lina","Dusine","Nana","Linnea","Lissie","Mai-Britt","Luna","Sisse","Malou","Emilia","Søs","Ea","Dorit","Lovise","Belinda","Unavngivet","Ali","Catrine","Elvine","Jeanett","Sabina","Cæcilie","Lisette","Melissa","Elena","Fatima","Hedevig","Lily","Gerd","Severine","Natasha","Marina","Hulda","Fatma","Birgith","Celina","June","Marion","Vang","Abelone","Marna","Lonnie","Sascha","May","Natalie","Maya","Lili","Sussie","Thomine","Theresa","Anne-Sofie","Isabel","Ingerlise","Beate","Jensigne","Kim","Nanny","Åse","Frieda","Emily","Solvej","Estrid","Antoinette","Bianca","Ritta","Claudia","Teresa","Yasmin","Anne-Grethe","Margarethe","Antonie","Margareta","Ellis","Hilma","Birgitta","Sally","Ursula","Irena","Marta","Leila","Liva","Jul","Franciska","Annine","Vibe","Katarina","Linette","Margaret","Sif","Linea","Leonora","Vicki","Jessica","Miriam","Gunver","Suzanne","Gyda","Michella","Celine","Brit","Jennifer","Anna-Lise","Kia","Margaretha","Xenia","Sissel","Greta","Ayse","Antonia","Ethel","Else-Marie","Constance","Mimi","Sandie","Kit","Michala","Lucie","Vinni","Regina","Silke","Mariam","Tilde","Tinna","Hildegard","Johnna","Nynne","Inger-Lise","Birgithe","Gunvor","Bibi","Jessie","Denise","Ottilie","Dyveke","Kitty","Sidse","Krestine","Albertine","Judithe","Vinnie","Liss","Guldborg","Ada","Stefanie","Camille","Alis","Terese","Louisa","Jeanet","Joy","Lonni","Agda","Daniella","Lajla","Kathinka","Hildur","Jacqueline","Bjørg","Debora","Carmen","Mathea","Rosalie","Hassan","Othilie","Christence","Freya","Ahmad","Cornelia","Marthine","Magdalena","Kristence","Lizette","Susie","Auguste","Maud","Ulrikke","Stinne","Adelheid","Michele","Amina","Theresia","Anitta","Kjerstine","Angela","Mine","Lucia","Didde","Tania","Veronica","Gunna","Bolethe","Elli","Madsine","Jill","Silje","Ann-Sofie","Michaela","Edit","De","Tonny","Kari","Edna","Lee","Joanna","Lenette","Margarete","Thilde","Natalia","Jean","Hatice","Zahra","Brigitte","Mira","Catharine","Emine","Vanda","Mina","Adda","Rakel","Kamille","Anna-Marie","Nete","Berta","Ulrikka","Siri","Martina","Amy","Monique","Katinka","Bo","Wanda","Edle","Marianna","Bonnie","Mathilda","Filippa","Susanna","Ghita","Winni","Justine","Mohamad","Kristin","Nikita","Judy","Veronika","Vicky","Magdaline","Ely","Lona","My","Margith","Sheila","Maibrit","Myrna","Adele","Lissa","Merry","Molly","Tanya","Marit","Marry","Ronja","Gretha","Natacha","Flora","Nielsigne","Lonny","N","Allis","Ritha","Siff","Rud","Anne-Grete","Tekla","Irmgard","Neel","Mari","Madeleine","Kerstin","Gunda","Abdi","Ana","Rosine","Puk","Renate","Isabell","Kimmie","Elsebet","Vanessa","Kæthe","Anina","Aida","Runa","Benigne","Synnøve","Janet","Etly","Gisela","Eugenia","Marguerite","Anika","Rachel","Maybritt","Fritze","Dea","Boe","Beth","Tea","Tatiana","Ewa","Grace","Nini","Cristina","Daisy","Gro","Berith","Samira","Thomasine","Ngoc","Grith","May-Britt","Janina","Elsine","Yelva","Elfriede","Methea","Hella","Angelica","Borghild","Eugenie","Antonette","Zeynep","Toni","Danielle","Hansa","Amalia","Engel","Georgine","Catherine","Amal","Mitzi","Renée","Augustine","Othilia","Monna","Käthe","Jeannie","Beatrice","Iman","Thuy","Elida","Beathe","Daniela","Ibrahim","Bertine","Cecillie","Franziska","Gabriella","Aleksandra","Cille","Silja","Margretha","Katharine","Bebiane","Liza","Lola","Kitt","Angelika","Maia","Heide","Nadine","Elsie","Annegrethe","Tinne","Elke","Helvig","Maryam","Manja","Hermine","Cicilie","Ilona","Josefa","Anne-Dorthe","Benny","Naomi","Henni","Carolina","Laurette","Jytta","Mikkeline","Katrin","Malgorzata","Anastasia","Chalotte","Jo","Sasha","Tora","Emmely","Kis","Roma","Melisa","Siv","Nathalia","Adolfine","Leni","Renee","Melina","Ottomine","Anneli","Mikala","Katarzyna","Erica","Karen-Margrethe","Ann-Marie","Kirsti","Thanh","Elzbieta","Caja","Zofia","Dianna","Zainab","Irina","Wivi","Karolina","Ayoe","Cindy","Ottilia","Lilja","Sacha","Gitta","Gina","Isabelle","Rosalia","Suzan","Bende","Claire","Aya","Herta","Jennie","Elma","Lill","Anne-Sophie","Gunilla","Otilie","Nur","Katy","Ingefred","Zita","Ruby","Gunild","Gjertrud","Nuka","Salome","Bjørk","Mirjam","Abdul","Bergliot","Selina","Isa","Lejla","Thekla","Andersine","Sahra","Fiona","Sanna","Sys","Edele","Chanette","Løkke","Inge-Marie","Elene","Aviaja","Hanan","Karline","Debbie","Tonni","Elina","Kristense","Noomi","Abigael","Alfa","Vitta","Pil","Aisha","Erikka","Sultan","Sigrun","Michela","Jasmina","Addy","Krystyna","Lydie","Dorethe","Irmelin","Gladys","Ninette","Carola","Farah","Nada","Phuong","Kathleen","Rina","Inger-Marie","Gertrude","Aurora","Silvia","Sinne","Mildred","Annegrete","Britha","Hilde","Dana","Linn","Marita","Cassandra","Annita","Aino","Rut","Levin","Alberta","Amira","Annitta","Rosemarie","Lin","Inge-Merete","Tone","Claudine","Leyla","Ann-Britt","Jenni","Ingegerd","Alba","Elga","Beata","Felicia","Mohammed","Sanni","Samantha","Cathrina","Hong","Karen-Marie","Svea","Marga","Gyrithe","Thu","Celia","Kaya","Berthine","Ottine","Magny","Meryem","Stefania","Eleonore","Margarita","Fadime","Dortea","Desiree","Lara","Paninnguaq","Alina","Eileen","Ann-Mari","Tatjana","Norman","Githa","Anelise","Janie","Yasemin","Fernanda","Konny","Anne-Dorte","Alida","Katrina","Anna-Grethe","Aja","Hedwig","Emina","Sonia"];class D{constructor(e){this.value=e}toJSON(){return this.value}toString(){return String(this.value)}GetHashCode(){return d(this.value)}Equals(e){return null!=e&&m(this.value,e instanceof D?e.value:e)}CompareTo(e){return null==e?1:g(this.value,e instanceof D?e.value:e)}}function O(e){return null==e||e instanceof D?new D(e):e}function F(e){if(null==e)throw new Error("Option has no value");return e instanceof D?e.value:e}class x extends p{constructor(e,n){super(),this.head=e,this.tail=n}toString(){return"["+I("; ",this)+"]"}Equals(e){return this===e||((e,n)=>{e:for(;;){const t=e,r=n,i=[t.tail,r.tail];if(null!=i[0]){if(null!=i[1]){const a=i[0],o=i[1];if(m(t.head,r.head)){e=a,n=o;continue e}return!1}return!1}return null==i[1]}})(this,e)}GetHashCode(){return 0|((e,n,t)=>{for(;;){const r=e,i=n,a=t,o=a.tail;if(null==o)return 0|i;{const l=o;if(r>18)return 0|i;e=r+1,n=(i<<1)+d(a.head)+631*r,t=l}}})(0,0,this)}toJSON(e){return Array.from(this)}CompareTo(e){return 0|((e,n)=>{e:for(;;){const t=e,r=n,i=[t.tail,r.tail];if(null!=i[0]){if(null!=i[1]){const a=i[0],o=i[1],l=0|g(t.head,r.head);if(0===l){e=a,n=o;continue e}return 0|l}return 1}return null!=i[1]?-1:0}})(this,e)}GetEnumerator(){return new P(this)}[Symbol.iterator](){return a(this.GetEnumerator())}"System.Collections.IEnumerable.GetEnumerator"(){return i(this)}}class P{constructor(e){this.xs=e,this.it=this.xs,this.current=null}"System.Collections.Generic.IEnumerator`1.get_Current"(){return this.current}"System.Collections.IEnumerator.get_Current"(){return this.current}"System.Collections.IEnumerator.MoveNext"(){const e=this,n=e.it.tail;if(null!=n){const t=n;return e.current=e.it.head,e.it=t,!0}return!1}"System.Collections.IEnumerator.Reset"(){const e=this;e.it=e.xs,e.current=null}Dispose(){}}function V(e){return null==e.tail}function z(e){if(null!=e.tail)return e.head;throw new Error("Collection was empty.\\nParameter name: list")}function _(e){const n=e.tail;if(null!=n)return n;throw new Error("Collection was empty.\\nParameter name: list")}function W(){throw new Error("Enumeration has not started. Call MoveNext.")}function U(){throw new Error("Enumeration already finished.")}class q{constructor(e){this.f=e}toString(){let e=0,t="seq [";const r=i(this);try{for(;e<4&&r["System.Collections.IEnumerator.MoveNext"]();)e>0&&(t+="; "),t+=v(r["System.Collections.Generic.IEnumerator`1.get_Current"]()),e=e+1|0;return 4===e&&(t+="; ..."),t+"]"}finally{n(r)}}GetEnumerator(){return this.f()}[Symbol.iterator](){return a(this.GetEnumerator())}"System.Collections.IEnumerable.GetEnumerator"(){return this.f()}}class Y{constructor(e,n,t){this.current=e,this.next=n,this.dispose=t}"System.Collections.Generic.IEnumerator`1.get_Current"(){return this.current()}"System.Collections.IEnumerator.get_Current"(){return this.current()}"System.Collections.IEnumerator.MoveNext"(){return this.next()}"System.Collections.IEnumerator.Reset"(){!function(){throw new Error("Reset is not supported on this enumerator.")}()}Dispose(){this.dispose()}}function Z(e,n,t){return new Y(e,n,t)}function $(e){return function(e){return new q(e)}(e)}function X(e){return n="source",null==e&&function(e){throw new Error(e)}(n),i(e);var n}function Q(e){return e instanceof x?function(e){const n=0|function(e){return 0|((e,n)=>{for(;;){const t=e,r=n.tail;if(null==r)return 0|t;e=t+1,n=r}})(0,e)}(e),t=(r=new Array(n),i=n,r.fill(null,0,0+i));var r,i;return((e,n)=>{for(;;){const r=e,i=n;if(V(i))break;t[r]=z(i),e=r+1,n=_(i)}})(0,e),t}(e):Array.from(e)}function ee(e,n,t){return $((()=>function(e,n,t){let r,i=!1,a=O(e());const o=()=>{if(null!=a){const e=F(a);try{t(e)}finally{a=void 0}}},l=()=>{try{o()}finally{r=void 0}};return Z((()=>(i||W(),null!=r?F(r):U())),(()=>{if(i||(i=!0),null!=a){const e=F(a);let t;try{t=n(e)}catch(e){throw l(),e}return null!=t?(r=t,!0):(l(),!1)}return!1}),o)}(e,n,t)))}function ne(e,t,r){const i=X(r);try{let r=t;for(;i["System.Collections.IEnumerator.MoveNext"]();)r=e(r,i["System.Collections.Generic.IEnumerator`1.get_Current"]());return r}finally{n(i)}}function te(e,t){return ee((()=>X(t)),(n=>n["System.Collections.IEnumerator.MoveNext"]()?O(e(n["System.Collections.Generic.IEnumerator`1.get_Current"]())):void 0),(e=>{n(e)}))}class re{constructor(e,n){this.cleanup=e,this.res=n}Dispose(){this.cleanup()}GetEnumerator(){return getEnumerator(this.res)}[Symbol.iterator](){return toIterator(this.GetEnumerator())}"System.Collections.IEnumerable.GetEnumerator"(){return getEnumerator(this.res)}}function ie(e,n){if(e.has(n))return e.get(n);throw new Error(`The given key '${n}' was not present in the dictionary.`)}class ae{constructor(e,t){const r=new T(null);this.comparer=t,r.contents=this,this.hashMap=new Map([]),this["init@8-2"]=1;const a=i(e);try{for(;a["System.Collections.IEnumerator.MoveNext"]();){const e=a["System.Collections.Generic.IEnumerator`1.get_Current"]();ue(r.contents,e)}}finally{n(a)}}get[Symbol.toStringTag](){return"HashSet"}toJSON(e){return Array.from(this)}"System.Collections.IEnumerable.GetEnumerator"(){return i(this)}GetEnumerator(){return i((e=this.hashMap.values(),$((()=>function(e){let t,r,a,o=!1,l=!1;const s=()=>{if(l=!0,null!=r){const e=r;try{n(e)}finally{r=void 0}}if(null!=t){const e=t;try{n(e)}finally{t=void 0}}};return Z((()=>(o?l&&U():W(),null!=a?F(a):U())),(()=>{let u;if(o||(o=!0),l)return!1;{let o;for(;null==o;){const l=[t,r];if(null!=l[0])if(null!=l[1]){const e=l[1];if(e["System.Collections.IEnumerator.MoveNext"]())a=O(e["System.Collections.Generic.IEnumerator`1.get_Current"]()),o=!0;else try{n(e)}finally{r=void 0}}else{const e=l[0];e["System.Collections.IEnumerator.MoveNext"]()?(u=e["System.Collections.Generic.IEnumerator`1.get_Current"](),r=i(u)):(s(),o=!1)}else t=i(e)}return F(o)}}),(()=>{l||s()}))}(e)))));var e}[Symbol.iterator](){return a(this.GetEnumerator())}"System.Collections.Generic.ICollection`1.Add2B595"(e){ue(this,e)}"System.Collections.Generic.ICollection`1.Clear"(){le(this)}"System.Collections.Generic.ICollection`1.Contains2B595"(e){return ce(this,e)}"System.Collections.Generic.ICollection`1.CopyToZ2E171D71"(e,n){var t;t=(t,r)=>{e[n+t]=r},ne(((e,n)=>(t(e,n),e+1|0)),0,this)}"System.Collections.Generic.ICollection`1.get_Count"(){return 0|se(this)}"System.Collections.Generic.ICollection`1.get_IsReadOnly"(){return!1}"System.Collections.Generic.ICollection`1.Remove2B595"(e){return he(this,e)}get size(){return 0|se(this)}add(e){return ue(this,e),this}clear(){le(this)}delete(e){return he(this,e)}has(e){return ce(this,e)}keys(){return te((e=>e),this)}values(){return te((e=>e),this)}entries(){return te((e=>[e,e]),this)}forEach(e,n){const t=this;var r;r=n=>{e(n,n,t)},ne(((e,n)=>{r(n)}),void 0,t)}}function oe(e,n){const t=0|e.comparer.GetHashCode(n);let r,i=null;return r=[(a=e.hashMap,o=t,l=new T((()=>i),(e=>{i=e})),!!a.has(o)&&(l.contents=a.get(o),!0)),i],r[0]?[!0,t,r[1].findIndex((t=>e.comparer.Equals(n,t)))]:[!1,t,-1];var a,o,l}function le(e){e.hashMap.clear()}function se(e){let t=0,r=i(e.hashMap.values());try{for(;r["System.Collections.IEnumerator.MoveNext"]();)t=t+r["System.Collections.Generic.IEnumerator`1.get_Current"]().length|0}finally{n(r)}return 0|t}function ue(e,n){const t=oe(e,n);return t[0]?!(t[2]>-1)&&(ie(e.hashMap,t[1]).push(n),!0):(e.hashMap.set(t[1],[n]),!0)}function ce(e,n){const t=oe(e,n);let r;switch(r=t[0]&&t[2]>-1?0:1,r){case 0:return!0;case 1:return!1}}function he(e,n){const t=oe(e,n);let r;switch(r=t[0]&&t[2]>-1?0:1,r){case 0:return ie(e.hashMap,t[1]).splice(t[2],1),!0;case 1:return!1}}function de(e,t,r){return a=()=>{const i=new ae(e,r);return function(e,t){return function(t,r){return ee((()=>X(r)),(n=>{let t;for(;null==t&&n["System.Collections.IEnumerator.MoveNext"]();)r=n["System.Collections.Generic.IEnumerator`1.get_Current"](),t=e(r)?O(r):void 0;var r;return t}),(e=>{n(e)}))}(0,t)}((e=>{return n=e,!(t=i).has(n)&&(t.add(n),!0);var n,t}),t)},$((()=>i(a())));var a}function me(e,n,t){return Q(de(e,n,t))}class fe extends Error{constructor(){super("The operation was canceled"),Object.setPrototypeOf(this,fe.prototype)}}class ge{constructor(){this.callCount=0}static get maxTrampolineCallCount(){return 2e3}incrementAndCheck(){return this.callCount++>ge.maxTrampolineCallCount}hijack(e){this.callCount=0,setTimeout(e,0)}}function ye(e){return n=>{if(n.cancelToken.isCancelled)n.onCancel(new fe);else if(n.trampoline.incrementAndCheck())n.trampoline.hijack((()=>{try{e(n)}catch(e){n.onError(J(e))}}));else try{e(n)}catch(e){n.onError(J(e))}}}const Ee=new class{Bind(e,n){return function(e,n){return ye((t=>{e({onSuccess:e=>{try{n(e)(t)}catch(e){t.onError(J(e))}},onError:t.onError,onCancel:t.onCancel,cancelToken:t.cancelToken,trampoline:t.trampoline})}))}(e,n)}Combine(e,n){return this.Bind(e,(()=>n))}Delay(e){return ye((n=>e()(n)))}For(e,n){const t=e[Symbol.iterator]();let r=t.next();return this.While((()=>!r.done),this.Delay((()=>{const e=n(r.value);return r=t.next(),e})))}Return(e){return function(e){return ye((n=>n.onSuccess(e)))}(e)}ReturnFrom(e){return e}TryFinally(e,n){return ye((t=>{e({onSuccess:e=>{n(),t.onSuccess(e)},onError:e=>{n(),t.onError(e)},onCancel:e=>{n(),t.onCancel(e)},cancelToken:t.cancelToken,trampoline:t.trampoline})}))}TryWith(e,n){return ye((t=>{e({onSuccess:t.onSuccess,onCancel:t.onCancel,cancelToken:t.cancelToken,trampoline:t.trampoline,onError:e=>{try{n(e)(t)}catch(e){t.onError(J(e))}}})}))}Using(e,n){return this.TryFinally(n(e),(()=>e.Dispose()))}While(e,n){return e()?this.Bind(n,(()=>this.While(e,n))):this.Return(void 0)}Zero(){return ye((e=>e.onSuccess(void 0)))}};function Me(e){}const Se=new class{constructor(e=!1){this._id=0,this._cancelled=e,this._listeners=new Map}get isCancelled(){return this._cancelled}cancel(){if(!this._cancelled){this._cancelled=!0;for(const[,e]of this._listeners)e()}}addListener(e){const n=this._id;return this._listeners.set(this._id++,e),n}removeListener(e){return this._listeners.delete(e)}register(e,n){const t=this,r=this.addListener(null==n?e:()=>e(n));return{Dispose(){t.removeListener(r)}}}Dispose(){}};function Ae(e,n){return function(e,n){return function(e,n,t,r,i){"function"!=typeof n&&(i=n,n=void 0);const a=new ge;e({onSuccess:n||Me,onError:t||Me,onCancel:r||Me,cancelToken:i||Se,trampoline:a})}(e,n)}(e,n)}function ke(e){const n=localStorage.getItem(e);return null===n?"":n}function Ce(e,n){localStorage.setItem(e,n)}function be(e,n){return function(e,n,t,r){if(r="number"==typeof r?r:0,(t="number"==typeof t?t:void 0)&&t<0)throw new Error("Count cannot be less than zero");if(0===t)return[];const i=1==(1&r),a=2==(2&r);n=(n=(n=n||[]).filter((e=>e)).map(b)).length>0?n:["\\s"];const o=[],l=new RegExp(n.join("|"),"g");let s=!0,u=0;do{const n=l.exec(e);if(null===n){const n=a?e.substring(u).trim():e.substring(u);(!i||n.length>0)&&o.push(n),s=!1}else{const r=a?e.substring(u,n.index).trim():e.substring(u,n.index);(!i||r.length>0)&&(null!=t&&o.length+1===t?(o.push(a?e.substring(u).trim():e.substring(u)),s=!1):o.push(r)),u=l.lastIndex}}while(s);return o}(n,[e],null,0)}function ve(e){return document.getElementById(e)}const pe=ve("liked"),Te=ve("name"),Le=ve("yes"),Je=ve("no"),He=ve("copy"),Be=ve("clear");function Ke(e){pe.textContent=e+"\n"+pe.textContent}const je=function(){const e=be(";",ke("liked")),n=be(";",ke("disliked")),t=function(){const e=ve("girl"),n=ve("boy");return e.onchange=e=>{Ce("gender","girl"),window.location.reload()},n.onchange=e=>{Ce("gender","boy"),window.location.reload()},"boy"===ke("gender")?(n.checked=!0,R):(e.checked=!0,w)}();Ke(("\n",I("\n",e.slice().reverse())));const r=me(n,me(e,t,{Equals:(e,n)=>e===n,GetHashCode:u}),{Equals:(e,n)=>e===n,GetHashCode:u});let i=-1;const a=()=>-1===i?"":r[i];return[()=>(i=i+1|0,a()),a]}(),Ge=je[0],Ie=je[1];function Ne(){let e;Te.textContent=(e=Ge(),function(e){return K((e=>e),e)}(B("Do you like %s?"))(e))}function Re(e,n){const t=ke(e);Ce(e,""===t?n:t+";"+n)}function we(e){Ae(Ee.Delay((()=>Ee.TryWith(Ee.Delay((()=>{let e;return Ee.Bind((e=pe.textContent,n=navigator.clipboard.writeText(e),t=e=>n.then(e[0]).catch((n=>(n instanceof fe?e[2]:e[1])(n))),ye((e=>t([e.onSuccess,e.onError,e.onCancel])))),(()=>Ee.Return()));var n,t})),(e=>{const n=e.message;return K((e=>console.log(e)),B("Promise rejected %s"))(n),Ee.Zero()})))))}Ne(),He.onclick=e=>{we()},Le.onclick=e=>{Re("liked",Ie()),Ke(Ie()),Ne()},Je.onclick=e=>{Re("disliked",Ie()),Ne()},Be.onclick=e=>{!function(e){const n="delete all liked and disliked names";window.prompt(`Type '${n}' to continue.`)===n&&(Ce("liked",""),Ce("disliked",""),window.location.reload())}()}})();